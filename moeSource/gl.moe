#foreign_library "GL"
#foreign_library "opengl32"
#static_library "legacy_stdio_definitions"
#static_library "glfw3"
#static_library "user32"
#static_library "gdi32"
#static_library "shell32"
#static_library "winmm"
#import "Basic"

SRect struct 
{
    m_left : s32
    m_top : s32
    m_right : s32
    m_bottom : s32
}

CreateWindow proc (dX : s64, dY : s64, pChzName : & const u8, ppVHwnd : && void) -> bool #foreign CreateWindow_MOE
ClearWindow proc (uRed : float, uGreen : float, uBlue : float, uAlpha : float) -> void #foreign
UpdateWindowEvents proc () -> void #foreign
SwapBuffers proc (pVHwnd : & void) -> void #foreign SwapBuffers_MOE
GetMonitorRefresh proc (pVHwnd: & void) -> s32 #foreign
CTickPerSecond proc () -> s64 #foreign
CTickWallClock proc () -> s64 #foreign
FTrySetTimerResolution proc (msResolution: u32) -> bool #foreign
Sleep proc (msResolution: u32) #foreign Sleep_MOE 

FGetNextEvent proc (pEvent: & SEvent) -> bool #foreign

CreateJoystickManager proc () -> & void #foreign
UpdateJoystickManager proc (pVJoyman: & void) #foreign

kNDeviceIdJoystickMin immutable := 0
kNDeviceIdJoystickMax immutable := 16
FIsJoystickConnected proc (nDeviceId: s32) -> bool #foreign
PChzJoystickName proc (nDeviceId: s32) -> & u8 #foreign
NTimeSeed proc () -> u32 #foreign


GL_POINTS immutable :=                0x0000
GL_LINES immutable :=                 0x0001
GL_LINE_LOOP immutable :=             0x0002
GL_LINE_STRIP immutable :=            0x0003
GL_TRIANGLES immutable :=             0x0004
GL_TRIANGLE_STRIP immutable :=        0x0005
GL_TRIANGLE_FAN immutable :=          0x0006
GL_QUADS immutable :=                 0x0007
GL_QUAD_STRIP immutable :=            0x0008
GL_POLYGON immutable :=               0x0009

GL_BLEND immutable :=                 0x0BE2
GL_TEXTURE_2D immutable :=            0x0DE1
GL_BYTE immutable :=                  0x1400
GL_UNSIGNED_BYTE immutable :=         0x1401
GL_SHORT immutable :=                 0x1402
GL_UNSIGNED_SHORT immutable :=        0x1403
GL_INT immutable :=                   0x1404
GL_UNSIGNED_INT immutable :=          0x1405
GL_FLOAT immutable :=                 0x1406
GL_2_BYTES immutable :=               0x1407
GL_3_BYTES immutable :=               0x1408
GL_4_BYTES immutable :=               0x1409
GL_DOUBLE immutable :=                0x140A

GL_MODELVIEW immutable :=             0x1700
GL_PROJECTION immutable :=            0x1701
GL_TEXTURE immutable :=               0x1702

GL_RGBA immutable :=                  0x1908

GL_VERTEX_ARRAY immutable :=          0x8074
GL_NORMAL_ARRAY immutable :=          0x8075
GL_COLOR_ARRAY immutable :=           0x8076
GL_INDEX_ARRAY immutable :=           0x8077
GL_TEXTURE_COORD_ARRAY immutable :=   0x8078
GL_EDGE_FLAG_ARRAY immutable :=       0x8079

GL_TEXTURE_BASE_LEVEL immutable :=    0x813C
GL_TEXTURE_MAX_LEVEL  immutable :=    0x813D

GL_TEXTURE0 immutable :=              0x84C0
GL_TEXTURE1 immutable :=              0x84C1
GL_TEXTURE2 immutable :=              0x84C2
GL_TEXTURE3 immutable :=              0x84C3
GL_TEXTURE4 immutable :=              0x84C4
GL_TEXTURE5 immutable :=              0x84C5
GL_TEXTURE6 immutable :=              0x84C6
GL_TEXTURE7 immutable :=              0x84C7
GL_TEXTURE8 immutable :=              0x84C8
GL_TEXTURE9 immutable :=              0x84C9
GL_TEXTURE10 immutable :=             0x84CA
GL_TEXTURE11 immutable :=             0x84CB
GL_TEXTURE12 immutable :=             0x84CC
GL_TEXTURE13 immutable :=             0x84CD
GL_TEXTURE14 immutable :=             0x84CE
GL_TEXTURE15 immutable :=             0x84CF
GL_TEXTURE16 immutable :=             0x84D0
GL_TEXTURE17 immutable :=             0x84D1
GL_TEXTURE18 immutable :=             0x84D2
GL_TEXTURE19 immutable :=             0x84D3
GL_TEXTURE20 immutable :=             0x84D4
GL_TEXTURE21 immutable :=             0x84D5
GL_TEXTURE22 immutable :=             0x84D6
GL_TEXTURE23 immutable :=             0x84D7
GL_TEXTURE24 immutable :=             0x84D8
GL_TEXTURE25 immutable :=             0x84D9
GL_TEXTURE26 immutable :=             0x84DA
GL_TEXTURE27 immutable :=             0x84DB
GL_TEXTURE28 immutable :=             0x84DC
GL_TEXTURE29 immutable :=             0x84DD
GL_TEXTURE30 immutable :=             0x84DE
GL_TEXTURE31 immutable :=             0x84DF

GL_FRAGMENT_SHADER_ARB immutable :=   0x8B30
GL_VERTEX_SHADER_ARB immutable :=     0x8B31

GL_COMPILE_STATUS immutable :=        0x8B81
GL_LINK_STATUS immutable :=           0x8B82
GL_INFO_LOG_LENGTH immutable :=       0x8B84




// BlendingFactorDest
GL_ZERO immutable :=                  0
GL_ONE immutable :=                   1
GL_SRC_COLOR immutable :=             0x0300
GL_ONE_MINUS_SRC_COLOR immutable :=   0x0301
GL_SRC_ALPHA immutable :=             0x0302
GL_ONE_MINUS_SRC_ALPHA immutable :=   0x0303
GL_DST_ALPHA immutable :=             0x0304
GL_ONE_MINUS_DST_ALPHA immutable :=   0x0305

// BlendingFactorSrc
GL_DST_COLOR immutable :=             0x0306
GL_ONE_MINUS_DST_COLOR immutable :=   0x0307
GL_SRC_ALPHA_SATURATE immutable :=    0x0308


glsizei typedef s32
glint typedef s32
gluint typedef u32
glenum typedef u32
glchar typedef u8
glboolean typedef u8
glfloat typedef f32
glbitfield typedef u32

glBegin proc (mode: s32) #foreign #stdcall
glEnd proc () #foreign #stdcall
glColor3f proc  (r: glfloat, g: glfloat, b: glfloat) -> void #foreign #stdcall
glColor4f proc  (r: glfloat, g: glfloat, b: glfloat, a: glfloat) -> void #foreign #stdcall
glVertex2f proc (x: glfloat, y: glfloat) #foreign #stdcall
glVertex3f proc (x: glfloat, y: glfloat, z: glfloat) #foreign #stdcall
glTexCoord2f proc (s: glfloat, t: glfloat) #foreign #stdcall
glTexCoord3f proc (s: glfloat, t: glfloat, r: glfloat) #foreign #stdcall
glTexCoord4f proc (s: glfloat, t: glfloat, r: glfloat, q: glfloat) #foreign #stdcall

glLoadIdentity proc () -> void #foreign #stdcall
glOrtho proc (xLeft: f64, xRight: f64, yBottom: f64, yTop: f64, zNear: f64, zFar: f64) -> void #foreign #stdcall
glGenTextures proc (n: glsizei, textures: & gluint) #foreign #stdcall
glBindTexture proc (target: glenum, texture: gluint) #foreign #stdcall
glTexParameteri proc (target: glenum, pname: glenum, param: glint) #foreign #stdcall
glTexImage2D proc (target: glenum, level: glint, internalformat: glint, width: glsizei, height: glsizei, border: glint, format: glenum, type: glenum, pixels: &void) #foreign #stdcall
glBlendFunc proc (sfactor: glenum, dfactor: glenum) #foreign #stdcall

glEnable proc (cap: glenum) #foreign #stdcall
glEnableClientState proc (array: glenum) #foreign #stdcall
glDisable proc (cap: glenum) #foreign #stdcall
glDisableClientState proc (array: glenum) #foreign #stdcall
glMatrixMode proc (mode: glenum) #foreign #stdcall

glPopAttrib proc () #foreign #stdcall
glPopClientAttrib proc () #foreign #stdcall
glPopMatrix proc () #foreign #stdcall
glPushAttrib proc (mask: glbitfield) #foreign #stdcall
glPushClientAttrib proc (mask: glbitfield) #foreign #stdcall
glPushMatrix proc () #foreign #stdcall
glVertexPointer proc (size: glint, type: glenum, stride: glsizei, pointer: & void) #foreign #stdcall
glColorPointer proc (size: glint, type: glenum, stride: glsizei, pointer: & void) #foreign #stdcall
glTexCoordPointer proc (size: glint, type: glenum, stride: glsizei, pointer: & void) #foreign #stdcall

glDrawArrays proc (mode: glenum, first: glint, count: glsizei) #foreign #stdcall
/*
glBegin proc (mode: s32) #foreign glBegin_MOE
glEnd proc () #foreign glEnd_MOE
glColor3f proc  (r: glfloat, g: glfloat, b: glfloat) -> void #foreign glColor3f_MOE
glColor4f proc  (r: glfloat, g: glfloat, b: glfloat, a: glfloat) -> void #foreign glColor4f_MOE
glVertex2f proc (x: glfloat, y: glfloat) #foreign glVertex2f_MOE
glVertex3f proc (x: glfloat, y: glfloat, z: glfloat) #foreign glVertex3f_MOE
glTexCoord2f proc (s: glfloat, t: glfloat) #foreign glTexCoord2f_MOE
glTexCoord3f proc (s: glfloat, t: glfloat, r: glfloat) #foreign glTexCoord3f_MOE
glTexCoord4f proc (s: glfloat, t: glfloat, r: glfloat, q: glfloat) #foreign glTexCoord4f_MOE

glLoadIdentity proc () -> void #foreign glLoadIdentity_MOE
glOrtho proc (xLeft: f64, xRight: f64, yBottom: f64, yTop: f64, zNear: f64, zFar: f64) -> void #foreign glOrtho_MOE
glGenTextures proc (n: glsizei, textures: & gluint) #foreign glGenTextures_MOE
glBindTexture proc (target: glenum, texture: gluint) #foreign glBindTexture_MOE
glTexParameteri proc (target: glenum, pname: glenum, param: glint) #foreign glTexParameteri_MOE
glTexImage2D proc (target: glenum, level: glint, internalformat: glint, width: glsizei, height: glsizei, border: glint, format: glenum, type: glenum, pixels: &void) #foreign glTexImage2D_MOE
glBlendFunc proc (sfactor: glenum, dfactor: glenum) #foreign glBlendFunc_MOE

glEnable proc (cap: glenum) #foreign glEnable_MOE
glEnableClientState proc (array: glenum) #foreign glEnableClientState_MOE
glDisable proc (cap: glenum) #foreign glDisable_MOE
glDisableClientState proc (array: glenum) #foreign glDisableClientState_MOE
glMatrixMode proc (mode: glenum) #foreign glMatrixMode_MOE

glPopAttrib proc () #foreign glPopAttrib_MOE
glPopClientAttrib proc () #foreign glPopClientAttrib_MOE
glPopMatrix proc () #foreign glPushMatrix_MOE
glPushAttrib proc (mask: glbitfield) #foreign glPushAttrib_MOE
glPushClientAttrib proc (mask: glbitfield) #foreign glPushClientAttrib_MOE
glPushMatrix proc () #foreign glPushMatrix_MOE
glVertexPointer proc (size: glint, type: glenum, stride: glsizei, pointer: & void) #foreign glVertexPointer_MOE
glColorPointer proc (size: glint, type: glenum, stride: glsizei, pointer: & void) #foreign glColorPointer_MOE
glTexCoordPointer proc (size: glint, type: glenum, stride: glsizei, pointer: & void) #foreign glTexCoordPointer_MOE

glDrawArrays proc (mode: glenum, first: glint, count: glsizei) #foreign glDrawArrays_MOE
*/

// GL extension function pointers
glCreateProgram: () -> gluint #stdcall #foreign
glDeleteProgram: (program: gluint) #stdcall #foreign
glLinkProgram: (program: gluint) #stdcall #foreign
glCreateShader: (type: glenum) -> gluint #stdcall #foreign
glDeleteShader: (shader: gluint) #stdcall #foreign
glShaderSource: (shader: gluint, count: glsizei, string: && const u8, length: &glint) #stdcall #foreign
glCompileShader: (handle: gluint) #stdcall #foreign
glGetShaderiv: (shader: gluint, pname: glenum, param: &glint) #stdcall #foreign
glGetProgramiv: (shader: gluint, pname: glenum, param: &glint) #stdcall #foreign
glGetShaderInfoLog: (shader: gluint, bufSize: glsizei, length: &glsizei, infoLog: &glchar) #stdcall #foreign
glGetProgramInfoLog: (shader: gluint, bufSize: glsizei, length: &glsizei, infoLog: &glchar) #stdcall #foreign
glAttachShader: (program: gluint, shader: gluint) #stdcall #foreign
glUseProgram: (program: gluint) #stdcall #foreign
glGetUniformLocation: (program: gluint, name: & const s8) -> glint #stdcall #foreign


glBindAttribLocation: (program: gluint, index: gluint, name: & const u8) #stdcall #foreign
glVertexAttribPointer: (index: gluint, size:glint, type: glenum, normalized: glboolean, stride: glsizei, pointer: & void) #stdcall #foreign
glDisableVertexAttribArray:  (index: gluint) #stdcall #foreign
glEnableVertexAttribArray:  (index: gluint) #stdcall #foreign

glUniform1f: (location: glint, v0: glfloat) #stdcall #foreign
glUniform2f: (location: glint, v0: glfloat, v1: glfloat) #stdcall #foreign
glUniform3f: (location: glint, v0: glfloat, v1: glfloat, v2: glfloat) #stdcall #foreign
glUniform4f: (location: glint, v0: glfloat, v1: glfloat, v2: glfloat, v3: glfloat) #stdcall #foreign
glUniform1i: (location: glint, v0: glint) #stdcall #foreign
glUniform2i: (location: glint, v0: glint, v1: glint) #stdcall #foreign
glUniform3i: (location: glint, v0: glint, v1: glint, v2: glint) #stdcall #foreign
glUniform4i: (location: glint, v0: glint, v1: glint, v2: glint, v3: glint) #stdcall #foreign
glUniformMatrix4fv: (location: glint, count: glsizei, transpose: glboolean, value: & glfloat) #stdcall #foreign
glActiveTexture: (texture: glenum) #stdcall #foreign
glClientActiveTexture: (texture: glenum) #stdcall #foreign



EVENTK enum s32 
{  // If we set this to u8, our packing will stop matching C's.
    Keyboard,
    Joystick,
    TextInput,
    Window,
    Quit,
    JoystickConnected,
    JoystickDisconnected,
}

KEYCODE enum u32 
{
    Unknown             := 0,
    ArrowLeft           := 1,
    ArrowRight          := 2,
    ArrowUp             := 3,
    ArrowDown           := 4,
    Shift               := 5,
    Escape              := 6,
    MouseButtonLeft     := 7,
    MouseButtonRight    := 8,

    Enter               := 10,

    F1                  := 11,
    F2                  := 12,
    F3                  := 13,
    F4                  := 14,
    F5                  := 15,
    F6                  := 16,
    F7                  := 17,
    F8                  := 18,
    F9                  := 19,
    F10                 := 20,
    F11                 := 21,
    F12                 := 22,
    F13                 := 23,
    F14                 := 24,
    F15                 := 25,
    F16                 := 26,

    KeySpace            := 30,
    KeyApostrophe       := 31,
    KeyComma            := 32,
    KeyMinus            := 33,
    KeyPeriod           := 34,
    KeySlash            := 35,
    Key0                := 36,
    Key1                := 37,
    Key2                := 38,
    Key3                := 39,
    Key4                := 40,
    Key5                := 41,
    Key6                := 42,
    Key7                := 43,
    Key8                := 44,
    Key9                := 45,
    KeySemicolon        := 46,
    KeyEqual            := 47,
    KeyA                := 48,
    KeyB                := 49,
    KeyC                := 50,
    KeyD                := 51,
    KeyE                := 52,
    KeyF                := 53,
    KeyG                := 54,
    KeyH                := 55,
    KeyI                := 56,
    KeyJ                := 57,
    KeyK                := 58,
    KeyL                := 59,
    KeyM                := 60,
    KeyN                := 61,
    KeyO                := 62,
    KeyP                := 63,
    KeyQ                := 64,
    KeyR                := 65,
    KeyS                := 66,
    KeyT                := 67,
    KeyU                := 68,
    KeyV                := 69,
    KeyW                := 70,
    KeyX                := 71,
    KeyY                := 72,
    KeyZ                := 73,
    KeyLeftBracket      := 74,
    KeyBackslash        := 75,
    KeyRightBracket     := 76,
    KeyGraveAccent      := 77,

    JoypadButton1       := 80,
    JoypadButton2       := 81,
    JoypadButton3       := 82,
    JoypadButton4       := 83,
    JoypadButton5       := 84,
    JoypadButton6       := 85,
    JoypadButton7       := 86,
    JoypadButton8       := 87,
    JoypadButton9       := 88,
    JoypadButton10      := 89,
    JoypadButton11      := 90,
    JoypadButton12      := 91,
    JoypadButton13      := 92,
    JoypadButton14      := 93,
    JoypadButton15      := 94,
    JoypadButton16      := 95,
    JoypadButton17      := 96,
    JoypadButton18      := 97,
    JoypadButton19      := 98,
    JoypadButton20      := 99,

}

EDGES enum u32
{
	Off,
	Release,
	Hold,
	Press	
}

SEvent struct 
{
    m_eventk : EVENTK = EVENTK.nil

    // If keyboard event:
    m_edges : EDGES
    m_nDeviceId: s32
    m_keycode : KEYCODE = KEYCODE.nil
    m_nTextInput : u32
}

GlfwProc typedef ()->void #foreign
PFnGlProcLookup proc (pChzName: & const u8) -> GlfwProc #foreign

FTryInitExtension proc (pChzName: & const u8, pfSuccess: &bool) -> GlfwProc 
{
   pFn := PFnGlProcLookup(pChzName)
   if pFn == null
   {
        printf("Failed to lookup glProc '%s'\n", pChzName)
        @pfSuccess = false
   }
   return pFn
}

FTryInitGLExtensions proc () -> bool
{
    // Hopefully this gets less gross when we have reflection

    fSuccess := true
    glCreateProgram = acast FTryInitExtension("glCreateProgram", &fSuccess)
    glDeleteProgram  = acast FTryInitExtension("glDeleteProgram", &fSuccess)
    glLinkProgram = acast FTryInitExtension("glLinkProgram", &fSuccess)
    glCreateShader = acast FTryInitExtension("glCreateShader", &fSuccess)
    glDeleteShader = acast FTryInitExtension("glDeleteShader", &fSuccess)
    glShaderSource = acast FTryInitExtension("glShaderSource", &fSuccess)
    glCompileShader = acast FTryInitExtension("glCompileShader", &fSuccess)
    glGetShaderiv = acast FTryInitExtension("glGetShaderiv", &fSuccess)
    glGetProgramiv = acast FTryInitExtension("glGetProgramiv", &fSuccess)
    glGetShaderInfoLog = acast FTryInitExtension("glGetShaderInfoLog", &fSuccess)
    glGetProgramInfoLog = acast FTryInitExtension("glGetProgramInfoLog", &fSuccess)
    glAttachShader = acast FTryInitExtension("glAttachShader", &fSuccess)
    glUseProgram = acast FTryInitExtension("glUseProgram", &fSuccess)
    glGetUniformLocation = acast FTryInitExtension("glGetUniformLocation", &fSuccess)
    glUniform1f = acast FTryInitExtension("glUniform1f", &fSuccess)
    glUniform2f = acast FTryInitExtension("glUniform2f", &fSuccess)
    glUniform3f = acast FTryInitExtension("glUniform3f", &fSuccess)
    glUniform4f = acast FTryInitExtension("glUniform4f", &fSuccess)
    glUniform1i = acast FTryInitExtension("glUniform1i", &fSuccess)
    glUniform2i = acast FTryInitExtension("glUniform2i", &fSuccess)
    glUniform3i = acast FTryInitExtension("glUniform3i", &fSuccess)
    glUniform4i = acast FTryInitExtension("glUniform4i", &fSuccess)
    glUniformMatrix4fv = acast FTryInitExtension("glUniformMatrix4fv", &fSuccess)
    glActiveTexture = acast FTryInitExtension ("glActiveTexture", &fSuccess)
    glClientActiveTexture = acast FTryInitExtension ("glClientActiveTexture", &fSuccess)
    glBindAttribLocation = acast FTryInitExtension("glBindAttribLocation", &fSuccess)
    glVertexAttribPointer = acast FTryInitExtension("glVertexAttribPointer", &fSuccess)
    glDisableVertexAttribArray = acast FTryInitExtension("glDisableVertexAttribArray", &fSuccess)
    glEnableVertexAttribArray = acast FTryInitExtension("glEnableVertexAttribArray", &fSuccess)
    return fSuccess
}

