<?xml version="1.0" encoding="utf-8"?> 
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010"> 
  <Type Name="EWC::CString">
      <DisplayString>{{ {m_pCoz,s} }}</DisplayString>
     <Expand>
       <Item Name="m_pCoz">m_pCoz</Item>
       <Item Name="m_shash">m_shash</Item>
      </Expand>
  </Type>
  <Type Name="STypeInfoInteger">
      <DisplayString>{{ {(m_fIsSigned)?'s':'u'}{m_cBit} }}</DisplayString>
  </Type>
  <Type Name="STypeInfoFloat">
      <DisplayString>{{ f{m_cBit} }}</DisplayString>
  </Type>
  <Type Name="STypeInfoPointer">
      <DisplayString>{{ pTinPointedTo={m_pTinPointedTo} }}</DisplayString>
  </Type>
  <Type Name="STypeInfoProcedure">
      <DisplayString>{{ proc={m_strName.m_pCoz,s} }}</DisplayString>
  </Type>
  <Type Name="STypeInfoStruct">
      <DisplayString>{{ {m_strName.m_pCoz,s} cField={m_aryTypemembField.m_c} }}</DisplayString>
  </Type>
  <Type Name="STypeInfoArray">
      <DisplayString>{{ m_aryk={m_aryk} m_pTin={m_pTin} }}</DisplayString>
  </Type>
  <Type Name="STypeInfoQualifier">
      <DisplayString>{{ qualk={m_qualk} }}</DisplayString>
  </Type>
  <Type Name="STypeInfoGeneric">
      <DisplayString>{{ name={m_strName.m_pCoz,s} }}</DisplayString>
  </Type>
  <Type Name="STypeInfo">
     <DisplayString>{{ tink={m_tink} name={m_strName} }}</DisplayString>
     <Expand>
       <Item Name="pTinint" Condition="m_tink == 0">(STypeInfoInteger*)this</Item>
       <Item Name="pTinfloat" Condition="m_tink == 1">(STypeInfoFloat*)this</Item>
       <Item Name="pTinptr" Condition="m_tink == 3">(STypeInfoPointer*)this</Item>
       <Item Name="pTinproc" Condition="m_tink == 4">(STypeInfoProcedure*)this</Item>
       <Item Name="pTinstruct" Condition="m_tink == 6">(STypeInfoStruct*)this</Item>
       <Item Name="pTinary" Condition="m_tink == 7">(STypeInfoArray*)this</Item>
       <Item Name="pTinqual" Condition="m_tink == 11">(STypeInfoQualifier*)this</Item>
       <Item Name="pTingen" Condition="m_tink == 16">(STypeInfoGeneric*)this</Item>
       <Item Name="m_tink">m_tink</Item>
       <Item Name="m_strName">m_strName</Item>
       <Item Name="m_strDebug">m_strDebug</Item>
       <Item Name="m_grftin">m_grftin</Item>
      </Expand>
  </Type>
  <Type Name="SSymbol">
      <DisplayString>{{ name={m_strName} m_grfsym={m_grfsym}}}</DisplayString>
  </Type>
  <Type Name="SSymbolPath">
      <DisplayString>{{ pSymTail={m_arypSym.m_a[m_arypSym.m_c]->m_strName} }}</DisplayString>
  </Type>
  <Type Name="SSymbolBase">
     <DisplayString>{{ m_symk={m_symk} }}</DisplayString>
     <Expand>
       <Item Name="pSym" Condition="m_symk == 0">(SSymbol*)this</Item>
       <Item Name="pSympath" Condition="m_symk == 1">(SSymbolPath*)this</Item>
      </Expand>
  </Type>
  <Type Name="SSyntaxTreeMap">
     <DisplayString>{{ m_stmapk={m_stmapk} }}</DisplayString>
     <Expand>
       <Item Name="pStproc" Condition="m_stmapk == 0">(CSTProcedure*)this</Item>
       <Item Name="pStfor" Condition="m_stmapk == 1">(CSTFor*)this</Item>
       <Item Name="pStdecl" Condition="m_stmapk == 2">(CSTDecl*)this</Item>
       <Item Name="pStenum" Condition="m_stmapk == 3">(CSTEnum*)this</Item>
       <Item Name="pStstruct" Condition="m_stmapk == 4">(CSTStruct*)this</Item>
      </Expand>
  </Type>

<Type Name="EWC::CAry&lt;*&gt;">
  <DisplayString>{{size = {m_c}}}</DisplayString>
  <Expand>
    <Item Name="[size]">m_c</Item>
    <Item Name="[capacity]">m_cMax</Item>
    <ArrayItems>
      <Size>m_c</Size>
      <ValuePointer>m_a</ValuePointer>
    </ArrayItems>
  </Expand>
</Type>

<Type Name="SAnchor">
  <DisplayString Condition="m_pStnodBaked!=nullptr">{{ m_pStnodBaked={m_pStnodBaked} }}</DisplayString>
  <DisplayString Condition="m_pTin!=nullptr">{{ m_pStnodBaked={m_pStnodBaked} }}</DisplayString>
  <DisplayString Condition="m_pTin==nullptr &amp;&amp; m_pStnodBaked==nullptr">{{ null anchor {m_genk}}}</DisplayString>
</Type>

<Type Name="EWC::CHash&lt;*,*,*&gt;">
    <DisplayString>{{Count = {m_cUsed}}}</DisplayString>
    <Expand>
      <CustomListItems MaxItemsPerView="5000" ExcludeView="Test">
        <Variable Name="pEntry" InitialValue="m_aEntry" />
        <Size>m_cUsed</Size>
        <Loop>
          <If Condition="pEntry->m_hv != 0xFFFFFFFF &amp;&amp; pEntry->m_hv != 0xFFFFFFFE">
            <Item>*pEntry</Item>
          </If>
          <Exec>++pEntry</Exec> 
        </Loop>
      </CustomListItems>
    </Expand>
</Type>

</AutoVisualizer>